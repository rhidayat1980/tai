use Mix.Config

config :echo_boy, port: 4200

config :ex_gdax,
  api_key: System.get_env("GDAX_API_KEY"),
  api_secret: System.get_env("GDAX_API_SECRET"),
  api_passphrase: System.get_env("GDAX_API_PASSPHRASE")

config :ex_poloniex,
  api_key: System.get_env("POLONIEX_API_KEY"),
  api_secret: System.get_env("POLONIEX_API_SECRET")

config :binance,
  api_key: System.get_env("BINANCE_API_KEY"),
  secret_key: System.get_env("BINANCE_API_SECRET")

config :tai,
  order_book_feeds: %{
    gdax: [
      adapter: Tai.ExchangeAdapters.Gdax.OrderBookFeed,
      order_books: [:btcusd, :ltcusd, :ethusd]
    ],
    binance: [
      adapter: Tai.ExchangeAdapters.Binance.OrderBookFeed,
      order_books: [:btcusdt, :ltcusdt, :ethusdt]
    ],
    poloniex: [
      adapter: Tai.ExchangeAdapters.Poloniex.OrderBookFeed,
      order_books: [:btcusdt, :ltcusdt, :ethusdt]
    ]
  }

config :tai,
  accounts: %{
    gdax: [
      adapter: Tai.ExchangeAdapters.Gdax.Account
    ],
    poloniex: [
      adapter: Tai.ExchangeAdapters.Poloniex.Account
    ],
    binance: [
      adapter: Tai.ExchangeAdapters.Binance.Account
    ]
  }

config :tai,
  advisors: [
    %{
      id: :create_and_cancel_pending_order,
      supervisor: Examples.Advisors.CreateAndCancelPendingOrder.Supervisor,
      order_books: "gdax.btcusd"
    },
    %{
      id: :fill_or_kill_orders,
      supervisor: Examples.Advisors.FillOrKillOrders.Supervisor,
      order_books: "binance.btcusdt"
    },
    %{
      id: :log_spread_advisor,
      supervisor: Examples.Advisors.LogSpread.Supervisor,
      order_books: "*"
    }
  ]
